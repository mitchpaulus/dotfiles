#!/usr/bin/awk -E

# Takes tab-separated column headers from copying out of Excel,
# and turns them into variable names and assignments.

BEGIN {
    FS=OFS="\t"
    # Assume what's passed is just header line.
    # However, sometimes there can be a newline within a header cell.
    # By default, Excel will copy that newline, wrapping field in quotes.
    # RS="asdfasdfasdfasdfasdf"
    python_form = 0
    column_letters = 0

    for (i = 1; i <= ARGC; i++) {
        if (ARGV[i] == "-p") {
            python_form = 1
            ARGV[i] = ""
        }
        else if (ARGV[i] == "-c") {
            column_letters = 1
            ARGV[i] = ""
        }
        else if (ARGV[i] == "-h") {
            print "Usage: " $0 " [-p] [-c] <file>"
            print "  -p: output Python form"
            print "  -c: output column letters in comments"
            exit 0
        }
    }

    letters[1] = "A"
    letters[2] = "B"
    letters[3] = "C"
    letters[4] = "D"
    letters[5] = "E"
    letters[6] = "F"
    letters[7] = "G"
    letters[8] = "H"
    letters[9] = "I"
    letters[10] = "J"
    letters[11] = "K"
    letters[12] = "L"
    letters[13] = "M"
    letters[14] = "N"
    letters[15] = "O"
    letters[16] = "P"
    letters[17] = "Q"
    letters[18] = "R"
    letters[19] = "S"
    letters[20] = "T"
    letters[21] = "U"
    letters[22] = "V"
    letters[23] = "W"
    letters[24] = "X"
    letters[25] = "Y"
    letters[26] = "Z"
    letters[27] = "AA"
    letters[28] = "AB"
    letters[29] = "AC"
    letters[30] = "AD"
    letters[31] = "AE"
}


NR == 1 {

    if  (python_form) {
        print "class :"
        print "    def __init__(self, line: List[str]):"
    }

    for (i = 1; i <= NF; i++) {

        header = $i

        gsub(/²/, "2", header)
        gsub(/³/, "3", header)
        gsub(/°/, "deg", header)
        gsub("#", "num", header) # Things like 'Package #', 'Issue #', etc.
        gsub(/[^a-zA-Z0-9]/, "_", header)
        gsub(/__+/, "_", header)

        # Trim leading and trailing underscores
        gsub(/_$/, "", header)
        gsub(/^_+/, "", header)

        header = tolower(header)

        if (python_form) {
            if (column_letters) {
                printf "        self.%s = line[%d]  # %s\n", header, i - 1, letters[i]
            }
            else {
                printf "        self.%s = line[%d]\n", header, i - 1
            }
        }
        else {
            if (column_letters) {
                printf "%s = $%s  # %s\n", header, i, letters[i]
            }
            else {
                printf "%s = $%s\n", header, i
            }
        }

    }
}

NR > 1 { exit }
